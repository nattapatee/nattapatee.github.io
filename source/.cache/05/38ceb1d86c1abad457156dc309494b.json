{"id":"VDoA","dependencies":[{"name":"C:\\Users\\v_goa\\src\\nattapatee.github.io\\source\\node_modules\\@fluentui\\react-component-ref\\dist\\es\\utils.js.map","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\v_goa\\src\\nattapatee.github.io\\source\\package.json","includedInParent":true,"mtime":1625570827605},{"name":"C:\\Users\\v_goa\\src\\nattapatee.github.io\\source\\node_modules\\@fluentui\\react-component-ref\\package.json","includedInParent":true,"mtime":1625568230685}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.isRefObject=exports.handleRef=void 0;var e=function(e,t){\"function\"!=typeof e?null!==e&&\"object\"==typeof e&&(e.current=t):e(t)};exports.handleRef=e;var t=function(e){return null!==e&&\"object\"==typeof e&&e.hasOwnProperty(\"current\")};exports.isRefObject=t;"},"sourceMaps":{"js":{"mappings":[{"source":"utils.ts","name":null,"original":{"line":42,"column":7},"generated":{"line":1,"column":0}},{"source":"utils.ts","name":null,"original":{"line":42,"column":7},"generated":{"line":1,"column":13}},{"source":"utils.ts","name":null,"original":{"line":42,"column":7},"generated":{"line":1,"column":20}},{"source":"utils.ts","name":null,"original":{"line":42,"column":7},"generated":{"line":1,"column":35}},{"source":"utils.ts","name":null,"original":{"line":42,"column":7},"generated":{"line":1,"column":43}},{"source":"utils.ts","name":null,"original":{"line":42,"column":7},"generated":{"line":1,"column":56}},{"source":"utils.ts","name":null,"original":{"line":42,"column":7},"generated":{"line":1,"column":57}},{"source":"utils.ts","name":null,"original":{"line":42,"column":7},"generated":{"line":1,"column":64}},{"source":"utils.ts","name":null,"original":{"line":42,"column":7},"generated":{"line":1,"column":68}},{"source":"utils.ts","name":null,"original":{"line":42,"column":7},"generated":{"line":1,"column":76}},{"source":"utils.ts","name":null,"original":{"line":42,"column":7},"generated":{"line":1,"column":88}},{"source":"utils.ts","name":null,"original":{"line":42,"column":7},"generated":{"line":1,"column":96}},{"source":"utils.ts","name":null,"original":{"line":42,"column":7},"generated":{"line":1,"column":111}},{"source":"utils.ts","name":null,"original":{"line":20,"column":7},"generated":{"line":1,"column":113}},{"source":"utils.ts","name":"handleRef","original":{"line":20,"column":13},"generated":{"line":1,"column":117}},{"source":"utils.ts","name":null,"original":{"line":20,"column":25},"generated":{"line":1,"column":119}},{"source":"utils.ts","name":"ref","original":{"line":20,"column":29},"generated":{"line":1,"column":128}},{"source":"utils.ts","name":"node","original":{"line":20,"column":60},"generated":{"line":1,"column":130}},{"source":"utils.ts","name":null,"original":{"line":29,"column":21},"generated":{"line":1,"column":133}},{"source":"utils.ts","name":"ref","original":{"line":29,"column":13},"generated":{"line":1,"column":152}},{"source":"utils.ts","name":null,"original":{"line":34,"column":14},"generated":{"line":1,"column":154}},{"source":"utils.ts","name":"ref","original":{"line":34,"column":6},"generated":{"line":1,"column":161}},{"source":"utils.ts","name":null,"original":{"line":34,"column":37},"generated":{"line":1,"column":164}},{"source":"utils.ts","name":"ref","original":{"line":34,"column":29},"generated":{"line":1,"column":181}},{"source":"utils.ts","name":"ref","original":{"line":37,"column":5},"generated":{"line":1,"column":185}},{"source":"utils.ts","name":"current","original":{"line":37,"column":39},"generated":{"line":1,"column":187}},{"source":"utils.ts","name":"node","original":{"line":37,"column":49},"generated":{"line":1,"column":195}},{"source":"utils.ts","name":"ref","original":{"line":30,"column":4},"generated":{"line":1,"column":198}},{"source":"utils.ts","name":"node","original":{"line":30,"column":8},"generated":{"line":1,"column":200}},{"source":"utils.ts","name":null,"original":{"line":42,"column":7},"generated":{"line":1,"column":204}},{"source":"utils.ts","name":null,"original":{"line":42,"column":7},"generated":{"line":1,"column":212}},{"source":"utils.ts","name":null,"original":{"line":42,"column":7},"generated":{"line":1,"column":222}},{"source":"utils.ts","name":null,"original":{"line":42,"column":7},"generated":{"line":1,"column":224}},{"source":"utils.ts","name":"isRefObject","original":{"line":42,"column":13},"generated":{"line":1,"column":228}},{"source":"utils.ts","name":null,"original":{"line":42,"column":27},"generated":{"line":1,"column":230}},{"source":"utils.ts","name":"ref","original":{"line":42,"column":28},"generated":{"line":1,"column":239}},{"source":"utils.ts","name":null,"original":{"line":43,"column":2},"generated":{"line":1,"column":242}},{"source":"utils.ts","name":null,"original":{"line":44,"column":10},"generated":{"line":1,"column":249}},{"source":"utils.ts","name":"ref","original":{"line":44,"column":2},"generated":{"line":1,"column":256}},{"source":"utils.ts","name":null,"original":{"line":44,"column":33},"generated":{"line":1,"column":259}},{"source":"utils.ts","name":"ref","original":{"line":44,"column":25},"generated":{"line":1,"column":276}},{"source":"utils.ts","name":"ref","original":{"line":44,"column":45},"generated":{"line":1,"column":279}},{"source":"utils.ts","name":"hasOwnProperty","original":{"line":44,"column":49},"generated":{"line":1,"column":281}},{"source":"utils.ts","name":null,"original":{"line":44,"column":64},"generated":{"line":1,"column":296}},{"source":"utils.ts","name":null,"original":{"line":42,"column":7},"generated":{"line":1,"column":308}},{"source":"utils.ts","name":null,"original":{"line":42,"column":7},"generated":{"line":1,"column":316}},{"source":"utils.ts","name":null,"original":{"line":42,"column":7},"generated":{"line":1,"column":328}}],"sources":{"utils.ts":"import * as React from 'react';\n\nexport interface RefProps {\n  children: React.ReactElement;\n\n  /**\n   * Called when a child component will be mounted or updated.\n   *\n   * @param node - Referred node.\n   */\n  innerRef: React.Ref<HTMLElement>;\n}\n\n/**\n * The function that correctly handles passing refs.\n *\n * @param ref - An ref object or function\n * @param node - A node that should be passed by ref\n */\nexport const handleRef = <N>(ref: React.Ref<N> | undefined, node: N) => {\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof ref === 'string') {\n      throw new Error(\n        'We do not support refs as string, this is a legacy API and will be likely to be removed in one of the future releases of React.',\n      );\n    }\n  }\n\n  if (typeof ref === 'function') {\n    ref(node);\n    return;\n  }\n\n  if (ref !== null && typeof ref === 'object') {\n    // The `current` property is defined as readonly, however it's a valid way because\n    // `ref` is a mutable object\n    (ref as React.MutableRefObject<N>).current = node;\n  }\n};\n\n/** Checks that the passed object is a valid React ref object. */\nexport const isRefObject = (ref: any): ref is React.RefObject<any> =>\n  // https://github.com/facebook/react/blob/v16.8.2/packages/react-reconciler/src/ReactFiberCommitWork.js#L665\n  ref !== null && typeof ref === 'object' && ref.hasOwnProperty('current');\n"},"lineCount":null}},"error":null,"hash":"700b60a8c34154519ef960724dd04a00","cacheData":{"env":{"NODE_ENV":"production"}}}