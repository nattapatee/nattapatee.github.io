{"id":"../node_modules/rc-tree/es/contextTypes.js","dependencies":[{"name":"C:\\Users\\v_goa\\src\\nattapatee.github.io\\source\\package.json","includedInParent":true,"mtime":1625570827605},{"name":"C:\\Users\\v_goa\\src\\nattapatee.github.io\\source\\node_modules\\rc-tree\\package.json","includedInParent":true,"mtime":1625568230482},{"name":"react","loc":{"line":5,"column":23},"parent":"C:\\Users\\v_goa\\src\\nattapatee.github.io\\source\\node_modules\\rc-tree\\es\\contextTypes.js","resolved":"C:\\Users\\v_goa\\src\\nattapatee.github.io\\source\\node_modules\\react\\index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TreeContext = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n/**\n * Webpack has bug for import loop, which is not the same behavior as ES module.\n * When util.js imports the TreeNode for tree generate will cause treeContextTypes be empty.\n */\nvar TreeContext =\n/*#__PURE__*/\nReact.createContext(null);\nexports.TreeContext = TreeContext;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"../node_modules/rc-tree/es/contextTypes.js","original":{"line":5,"column":0}},{"generated":{"line":12,"column":0},"source":"../node_modules/rc-tree/es/contextTypes.js","original":{"line":1,"column":0}},{"generated":{"line":16,"column":0},"source":"../node_modules/rc-tree/es/contextTypes.js","original":{"line":6,"column":7}},{"name":"TreeContext","generated":{"line":16,"column":4},"source":"../node_modules/rc-tree/es/contextTypes.js","original":{"line":6,"column":11}},{"generated":{"line":16,"column":15},"source":"../node_modules/rc-tree/es/contextTypes.js","original":{"line":6,"column":22}},{"generated":{"line":17,"column":0},"source":"../node_modules/rc-tree/es/contextTypes.js","original":{"line":6,"column":25}},{"name":"React","generated":{"line":18,"column":0},"source":"../node_modules/rc-tree/es/contextTypes.js","original":{"line":6,"column":38}},{"generated":{"line":18,"column":5},"source":"../node_modules/rc-tree/es/contextTypes.js","original":{"line":6,"column":43}},{"name":"createContext","generated":{"line":18,"column":6},"source":"../node_modules/rc-tree/es/contextTypes.js","original":{"line":6,"column":44}},{"generated":{"line":18,"column":19},"source":"../node_modules/rc-tree/es/contextTypes.js","original":{"line":6,"column":38}},{"generated":{"line":18,"column":20},"source":"../node_modules/rc-tree/es/contextTypes.js","original":{"line":6,"column":58}},{"generated":{"line":18,"column":24},"source":"../node_modules/rc-tree/es/contextTypes.js","original":{"line":6,"column":38}},{"generated":{"line":18,"column":25},"source":"../node_modules/rc-tree/es/contextTypes.js","original":{"line":6,"column":7}}],"sources":{"../node_modules/rc-tree/es/contextTypes.js":"/**\n * Webpack has bug for import loop, which is not the same behavior as ES module.\n * When util.js imports the TreeNode for tree generate will cause treeContextTypes be empty.\n */\nimport * as React from 'react';\nexport var TreeContext = /*#__PURE__*/React.createContext(null);"},"lineCount":null}},"error":null,"hash":"96fd7c34874b3661e7e1277f715c8f64","cacheData":{"env":{}}}